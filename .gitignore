target/
!.mvn/wrapper/maven-wrapper.jar
audit.log
.cache/
*.log

docs/
gh-pages/
dependency-reduced-pom.xml
svm.jar

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
nbproject/private/
build/
nbbuild/
dist/
nbdist/
.nb-gradle/

.DS_Store
.vscode
firebase*
yarn.lock
package*
!package.json
node_modules
.firebaserc
.firebase

# Setup files
/setup/project/**
/setup/env/**
!/setup/project/cloud-1.yml
!/setup/project/cloud-2.yml
!/setup/project/cloud-3.yml
!/setup/project/run.sh
!/setup/env/*.example
!/setup/hack.sh
!/setup/README.md

.tool-versions

virtual-mesh.yaml

## terraform 
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
local.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
.env*
!.env.example